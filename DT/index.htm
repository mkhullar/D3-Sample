<html>
<head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
<style type="text/css">
  	.p1 {
    	fill: none;
        stroke: orange;
        shape-rendering: crispEdges;
}
.p2 {
    	fill: none;
        stroke: blue;
        shape-rendering: crispEdges;
}
.p3 {
    	fill: none;
        stroke: green;
        shape-rendering: crispEdges;
}

.label {
        font-size: 22pt;
      }
</style>
</head>
<body>
	<script>
		var oHeight = 700;
		var oWidth = 1000;
		var margin = { left: 30, top: 30, right: 30, bottom: 30 };

		var yAxisLabelText = "Temperature Â°C";
        var yAxisLabelOffset = 40;

		var svg = d3.select("body").append("svg")
		.attr("width", oWidth)
		.attr("height",oHeight);

		var g = svg.append("g")
		.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
		var path1 = g.append("path")
		.attr("class", "p1");
		var path2 = g.append("path")
		.attr("class", "p2");
		var path3 = g.append("path")
		.attr("class", "p3");
      var innerWidth  = outerWidth  - margin.left - margin.right;
      var innerHeight = outerHeight - margin.top  - margin.bottom;
      var xScale = d3.time.scale().range([0, innerWidth]);
      var yScale = d3.scale.linear().range([innerHeight, 0]);
      
      var yAxisG = g.append("g")
        .attr("class", "y axis");
      // var yAxisLabel = yAxisG.append("text")
      //   .style("text-anchor", "middle")
      //   .attr("transform", "translate(" + 0 + "," + (innerHeight/2) + ") rotate(-90)")
      //   .attr("class", "label")
      //   .text(yAxisLabelText);


        function render(data){

        var yAxis = d3.svg.axis().scale(yScale).orient("left");

        yAxisG.call(yAxis);

        var line1 = d3.svg.line()
        .x(function(d) { return xScale(d["date"]); })
        .y(function(d) { return yScale(d["record_min_temp"]); });
        yScale.domain([d3.min(data, function (d){ return d["record_min_temp"];}),d3.max(data, function (d){ return d["record_max_temp"];})]);
        xScale.domain( d3.extent(data, function (d){ return d["date"]; }));

        var line2 = d3.svg.line()
        .x(function(d) { return xScale(d["date"]); })
        .y(function(d) { return yScale(d["record_max_temp"]); });
        yScale.domain([d3.min(data, function (d){ return d["record_min_temp"];}),d3.max(data, function (d){ return d["record_max_temp"];})]);
        xScale.domain( d3.extent(data, function (d){ return d["date"]; }));

        var line3 = d3.svg.line()
        .x(function(d) { return xScale(d["date"]); })
        .y(function(d) { return yScale(d["actual_mean_temp"]); });
        yScale.domain([d3.min(data, function (d){ return d["record_min_temp"];}),d3.max(data, function (d){ return d["record_max_temp"];})]);
        xScale.domain( d3.extent(data, function (d){ return d["date"]; }));
        path1.attr("d", line1(data));
        path2.attr("d", line2(data));
        path3.attr("d", line3(data));
      }
      function trans(d){
      	d.record_min_temp = +d.record_min_temp;
      	d.record_max_temp = +d.record_max_temp;
      	d.actual_mean_temp = +d.actual_mean_temp;
      	d.date = new Date(d.date);
      	return d;
      }
		d3.csv('KPHX.csv',trans, render);
	</script>
</body>
</html>